<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="GoodsColorDao">
<!--物料颜色 
	创建人：gcc
	邮箱：gcc@bestgcc.cn
	创建时间：2021-4-25 9:05:01
	版本号：1.0	
-->
<!-- *******************************************自定义方法区  不替换的区域【other_start】***************************************** -->	
 
 

<!-- *******************************************自定义方法区 【other_end】***************************************** -->	
<!-- *******************************************公用方法区(不可修改)***************************************** -->	
	<!-- 公用返回值 与数据库字段保持一致即可，同时实体(驼峰命名)必须包含所有字段 -->
	<sql id="base_column" >
		 id,company_code,sort,status,create_id,create_name,create_date,update_id,update_name,update_date,remarks,del_flag,color_type_id,color_hex,color_rgb,color_code,color,color_classify,pantone_code,pantone_name
	</sql>
	<!--  方法返回：成功条数。     方法名称： 新增          方法参数：list集合 -->
    <insert id="insert" parameterType="java.util.List">
        insert into t_goods_color ( <include refid="base_column" /> ) values
        <foreach collection="list" item="t" index="index" separator=",">
          (  #{t.id,jdbcType=VARCHAR},#{t.companyCode,jdbcType=VARCHAR},#{t.sort,jdbcType=INTEGER},#{t.status,jdbcType=VARCHAR},#{t.createId,jdbcType=VARCHAR},#{t.createName,jdbcType=VARCHAR},#{t.createDate,jdbcType=TIMESTAMP},#{t.updateId,jdbcType=VARCHAR},#{t.updateName,jdbcType=VARCHAR},#{t.updateDate,jdbcType=TIMESTAMP},#{t.remarks,jdbcType=VARCHAR},#{t.delFlag,jdbcType=VARCHAR},#{t.colorTypeId,jdbcType=VARCHAR},#{t.colorHex,jdbcType=VARCHAR},#{t.colorRgb,jdbcType=VARCHAR},#{t.colorCode,jdbcType=VARCHAR},#{t.color,jdbcType=VARCHAR},#{t.colorClassify,jdbcType=VARCHAR},#{t.pantoneCode,jdbcType=VARCHAR},#{t.pantoneName,jdbcType=VARCHAR}  )
        </foreach>
    </insert>
    <!-- 
		方法返回：成功条数。
		方法名称： 按list更新
		方法参数：list集合，id不为空，其他字段为空也修改，使用场景一般先查询  或更改明细的几个字段
	-->   
    <update id="updateList" parameterType="java.util.List">  
	    <foreach collection="list" item="t" index="index" separator=";">   
	    	 update t_goods_color
			     <set>
		    		id = #{t.id,jdbcType=VARCHAR},
		    		company_code = #{t.companyCode,jdbcType=VARCHAR},
		    		sort = #{t.sort,jdbcType=INTEGER},
		    		status = #{t.status,jdbcType=VARCHAR},
		    		create_id = #{t.createId,jdbcType=VARCHAR},
		    		create_name = #{t.createName,jdbcType=VARCHAR},
		    		create_date = #{t.createDate,jdbcType=TIMESTAMP},
		    		update_id = #{t.updateId,jdbcType=VARCHAR},
		    		update_name = #{t.updateName,jdbcType=VARCHAR},
		    		update_date = #{t.updateDate,jdbcType=TIMESTAMP},
		    		remarks = #{t.remarks,jdbcType=VARCHAR},
		    		del_flag = #{t.delFlag,jdbcType=VARCHAR},
		    		color_type_id = #{t.colorTypeId,jdbcType=VARCHAR},
		    		color_hex = #{t.colorHex,jdbcType=VARCHAR},
		    		color_rgb = #{t.colorRgb,jdbcType=VARCHAR},
		    		color_code = #{t.colorCode,jdbcType=VARCHAR},
		    		color = #{t.color,jdbcType=VARCHAR},
		    		color_classify = #{t.colorClassify,jdbcType=VARCHAR},
		    		pantone_code = #{t.pantoneCode,jdbcType=VARCHAR},
		    		pantone_name = #{t.pantoneName,jdbcType=VARCHAR},
			    </set>
			    where id = #{t.id,jdbcType=BIGINT}
			   
	    </foreach>  
	</update>
    
	<!-- 
		方法名称： 按条件更新
		方法参数：条件构造器（构造器中T对象所有不为空属性为修改后的值）。
		方法返回：成功条数。
	-->   
    <update id="update" parameterType="queryCondition">  
	   	update t_goods_color
	    <set>
		  	<if test="t.id != null">
    		id = #{t.id,jdbcType=VARCHAR},
    		</if>
		  	<if test="t.companyCode != null">
    		company_code = #{t.companyCode,jdbcType=VARCHAR},
    		</if>
		  	<if test="t.sort != null">
    		sort = #{t.sort,jdbcType=INTEGER},
    		</if>
		  	<if test="t.status != null">
    		status = #{t.status,jdbcType=VARCHAR},
    		</if>
		  	<if test="t.createId != null">
    		create_id = #{t.createId,jdbcType=VARCHAR},
    		</if>
		  	<if test="t.createName != null">
    		create_name = #{t.createName,jdbcType=VARCHAR},
    		</if>
		  	<if test="t.createDate != null">
    		create_date = #{t.createDate,jdbcType=TIMESTAMP},
    		</if>
		  	<if test="t.updateId != null">
    		update_id = #{t.updateId,jdbcType=VARCHAR},
    		</if>
		  	<if test="t.updateName != null">
    		update_name = #{t.updateName,jdbcType=VARCHAR},
    		</if>
		  	<if test="t.updateDate != null">
    		update_date = #{t.updateDate,jdbcType=TIMESTAMP},
    		</if>
		  	<if test="t.remarks != null">
    		remarks = #{t.remarks,jdbcType=VARCHAR},
    		</if>
		  	<if test="t.delFlag != null">
    		del_flag = #{t.delFlag,jdbcType=VARCHAR},
    		</if>
		  	<if test="t.colorTypeId != null">
    		color_type_id = #{t.colorTypeId,jdbcType=VARCHAR},
    		</if>
		  	<if test="t.colorHex != null">
    		color_hex = #{t.colorHex,jdbcType=VARCHAR},
    		</if>
		  	<if test="t.colorRgb != null">
    		color_rgb = #{t.colorRgb,jdbcType=VARCHAR},
    		</if>
		  	<if test="t.colorCode != null">
    		color_code = #{t.colorCode,jdbcType=VARCHAR},
    		</if>
		  	<if test="t.color != null">
    		color = #{t.color,jdbcType=VARCHAR},
    		</if>
		  	<if test="t.colorClassify != null">
    		color_classify = #{t.colorClassify,jdbcType=VARCHAR},
    		</if>
		  	<if test="t.pantoneCode != null">
    		pantone_code = #{t.pantoneCode,jdbcType=VARCHAR},
    		</if>
		  	<if test="t.pantoneName != null">
    		pantone_name = #{t.pantoneName,jdbcType=VARCHAR},
    		</if>
	    </set>
	    <include refid="common.whereClause" ></include>
	</update>
    
	<!-- 
		方法名称： 按条件删除
		方法参数：条件构造器。
		方法返回：成功条数。
	-->   
    <delete id="delete" parameterType="queryCondition">
    	delete from t_goods_color
    	<include refid="common.whereClause"></include>
    </delete>

	<!--
    	方法名称： 按字段汇总
	-->
	<select id="selectCount" resultType="java.lang.Integer" parameterType="queryCondition">
		select  count(${countByClause})
		<include refid="base_column"/>
		from t_goods_color
		<include refid="common.whereClause"></include>
		<if test="groupByClause != null">
			group by ${groupByClause}
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
    
    <!-- 
		方法名称： 按条件查询
		方法参数：条件构造器(可分组和排序)。
		方法返回：返回单个对象或集合。
	-->
    <select id="select" resultType="com.base.sbc.basedata.entity.GoodsColor" parameterType="queryCondition">
        select <include refid="base_column" /> from t_goods_color
        <include refid="common.whereClause"></include>
        <if test="groupByClause != null">
	        group by ${groupByClause}
        </if>
        <if test="orderByClause != null">
	        order by ${orderByClause}
        </if>
    </select>
</mapper>

<!-- /******************************************************************************
 * Copyright (C) 2018 广州尚捷科技有限责任公司
 * All Rights Reserved.
 * 本软件为公司：广州尚捷科技有限责任公司   开发研制。未经本站正式书面同意，其他任何个人、团体
 * 不得使用、复制、修改或发布本软件.
 ***************************************************************************** -->

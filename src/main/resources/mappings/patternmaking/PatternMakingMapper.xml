<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.base.sbc.module.patternmaking.mapper.PatternMakingMapper">
    <!--
        打版管理
        创建人：lxl
        邮箱：lxl.fml@gmail.com
        创建时间：2023-5-29 13:33:05
        版本号：1.0
      -->

    <!-- ***********************自定义方法区 不替换的区域【other_start】***************************************** -->


    <!-- ***********************自定义方法区 不替换的区域【other_end】******************************************** -->
    <select id="technologyCenterTaskList"
            resultType="com.base.sbc.module.patternmaking.vo.TechnologyCenterTaskVo">
        SELECT
        p.id,
        s.design_no,
        s.style_pic,
        s.prod_category1st_name,
        s.prod_category_name,
        s.prod_category2nd_name,
        s.prod_category3rd_name,
        s.brand,
        s.brand_name,
        s.year,
        s.year_name,
        s.month,
        s.month_name,
        s.season,
        s.season_name,
        s.band_code,
        s.band_name,
        s.style_name,
        p.design_send_date,
        p.prm_send_date,
        p.prm_send_status,
        p.urgency,
        p.urgency_name,
        p.planning_season_id,
        p.pattern_design_id,
        p.break_off_sample,
        p.break_off_pattern,
        p.pattern_design_name
        FROM
        t_pattern_making p,
        t_style s
        where p.style_id = s.id and p.design_send_status='1'
        <if test="ew.customSqlSegment != null and ew.customSqlSegment != ''">
            ${ ew.customSqlSegment.startsWith("WHERE")?ew.customSqlSegment.replace("WHERE","AND "):ew.customSqlSegment}
        </if>
    </select>
    <select id="getPatternDesignSampleTypeCount"
            resultType="com.base.sbc.module.patternmaking.vo.PatternDesignSampleTypeQtyVo">
        SELECT
        pattern_design_id ,sample_type ,count(id) as quantity
        FROM
        `t_pattern_making`
        WHERE

        del_flag =0
        <if test="ew.customSqlSegment != null and ew.customSqlSegment != ''">
            ${ ew.customSqlSegment.startsWith("WHERE")?ew.customSqlSegment.replace("WHERE","AND "):ew.customSqlSegment}
        </if>
        group by pattern_design_id ,sample_type

    </select>
    <select id="patternMakingTaskList"
            resultType="com.base.sbc.module.patternmaking.vo.PatternMakingTaskListVo">
        SELECT
        p.id,
        s.design_no,
        s.style_pic,
        s.prod_category1st_name,
        s.prod_category_name,
        s.prod_category2nd_name,
        s.prod_category3rd_name,
        s.brand,
        s.year,
        s.month,
        s.season,
        s.band_code,
        s.style_name,
        s.designer,
        s.designer_id,
        p.code,
        p.sample_type,
        p.design_send_date,
        p.prm_send_date,
        p.prm_send_status,
        p.urgency,
        p.node,
        p.status,
        p.sgl_kitting,
        p.technician_kitting,
        p.sort,
        p.suspend,
        p.planning_season_id,
        p.pattern_design_id,
        p.stitcher,
        p.stitcher_id,
        p.cutter_name,
        p.cutter_id,
        p.break_off_sample,
        p.break_off_pattern,
        p.update_date,
        p.pattern_design_name,
        p.sample_making_score,
        p.pattern_making_score
        FROM
        t_pattern_making p,
        t_style s
        where p.style_id = s.id
        and p.design_send_status='1'
        and p.prm_send_status='1'
        and p.del_flag &lt;&gt; '1'
        and s.del_flag &lt;&gt; '1'

        <if test="ew.customSqlSegment != null and ew.customSqlSegment != ''">
            ${ ew.customSqlSegment.startsWith("WHERE")?ew.customSqlSegment.replace("WHERE","AND "):ew.customSqlSegment}
        </if>


    </select>
    <select id="sampleBoardList" resultType="com.base.sbc.module.patternmaking.vo.SampleBoardVo">
        SELECT
        p.id AS patternMakingId,
        s.*,
        p.*
        FROM
        t_style s
        LEFT JOIN t_pattern_making p ON ( s.id = p.style_id )
        where
        p.del_flag &lt;&gt; '1'
        and s.del_flag &lt;&gt; '1'
        <if test="ew.customSqlSegment != null and ew.customSqlSegment != ''">
            ${ ew.customSqlSegment.startsWith("WHERE")?ew.customSqlSegment.replace("WHERE","AND "):ew.customSqlSegment}
        </if>
    </select>
    <select id="getAllPatternDesignList" resultType="com.base.sbc.module.sample.vo.SampleUserVo">
        select DISTINCT pattern_design_id as user_id, pattern_design_name as name
        from t_pattern_making s
        where company_code = #{companyCode}
          and pattern_design_id is not null

    </select>
    <select id="nsCount" resultType="java.util.Map">
        select CONCAT(node, '-', status) as nodeStatus, count(1) as total
        from t_pattern_making ${ew.customSqlSegment}
        group by node, status

    </select>
    <select id="findBySampleDesignId" resultType="com.base.sbc.module.patternmaking.vo.PatternMakingListVo">
        select m.*, d.product_sizes, d.pat_diff as sd_pat_diff, d.pat_diff_name as sd_pat_diff_name, d.default_size
        from t_pattern_making m
                 join t_style d on (m.style_id = d.id) ${ew.customSqlSegment}
    </select>

    <select id="getAllList" resultType="com.base.sbc.module.patternmaking.vo.PatternMakingForSampleVo">
        SELECT pk.id,
               pk.`code`,
               pk.sample_type,
               sd.style_name,
               sd.design_no,
               sd.prod_category_name as categoryName,
               sd.prod_category      as categoryCode,
               ps.id                 AS seasonId,
               ps.season,
               ps.season_name,
               sd.designer,
               sd.designer_id,
               sd.pattern_design_id,
               sd.pattern_design_name,
               pk.style_id
        FROM t_pattern_making pk
                 JOIN t_style sd ON sd.id = pk.style_id
                 JOIN t_planning_season ps ON ps.id = pk.planning_season_id
            ${ew.customSqlSegment}
    </select>

    <select id="versionComparisonViewWeekMonth" resultType="com.base.sbc.module.patternmaking.vo.PatternMakingWeekMonthViewVo" parameterType="com.base.sbc.module.patternmaking.dto.PatternMakingWeekMonthViewDto">
        SELECT
            *
        FROM
            (
            SELECT
                sample_type,
                DATE_FORMAT( create_date, IF(#{weeklyMonth} = 'week','%y年%u周', '%y年%m月') ) AS year_week,
                min( create_date ) AS min_date,
                count( 1 ) AS num
            FROM
                t_pattern_making
            WHERE
                del_flag = '0'
                AND sample_type = '初版样'
                AND company_code = #{companyCode}
                AND create_date BETWEEN #{startTime} AND #{endTime}
            GROUP BY
                DATE_FORMAT( create_date, IF(#{weeklyMonth} = 'week','%y%u', '%y%m') )
            ORDER BY
                year_week ASC
            )
        AS pmc
        UNION
        SELECT
            *
        FROM
            (
            SELECT
                sample_type,
                DATE_FORMAT( create_date, IF(#{weeklyMonth} = 'week','%y年%u周', '%y年%m月') ) AS year_week,
                min( create_date ) AS min_date,
                count( 1 ) AS num
            FROM
                t_pattern_making
            WHERE
                del_flag = '0'
                AND sample_type = '改版样'
                AND company_code = #{companyCode}
                AND create_date BETWEEN #{startTime} AND #{endTime}
            GROUP BY
                DATE_FORMAT( create_date, IF(#{weeklyMonth} = 'week','%y%u', '%y%m') )
            ORDER BY
                year_week ASC
            )
        AS pmg
    </select>

    <select id="categorySummaryCount" resultType="com.base.sbc.module.patternmaking.vo.PatternMakingWeekMonthViewVo" parameterType="com.base.sbc.module.patternmaking.dto.PatternMakingWeekMonthViewDto">
        SELECT
            #{sampleType} AS sample_type,
            DATE_FORMAT( pmm.create_date, IF(#{weeklyMonth} = 'week','%y年%u周', '%y年%m月') ) AS year_week,
        min( pmm.create_date ) AS min_date,
        count( 1 ) AS num,
        SUM( pmm.requirement_num ) AS requirement_num_sum
        FROM
        (
        SELECT
        sd.planning_category_id,
        pm.*
        FROM
        t_pattern_making pm
        LEFT JOIN t_style sd ON pm.style_id = sd.id
        LEFT JOIN t_planning_category_item pc ON sd.planning_category_id = pc.id
        WHERE
        pm.node = '打版任务'
        AND pm.company_code = #{companyCode}
        AND pm.create_date BETWEEN #{startTime} AND #{endTime}
        <if test="null != statusList and statusList.size() > 0">
                    AND pm.`status` IN
                    <foreach collection="statusList" item="status" separator="," open="(" close=")">
                        #{status}
                    </foreach>
                </if>
        <if test="null != categoryIds and categoryIds.size() > 0">
            AND pc.prod_category in
            <foreach collection="categoryIds" item="categoryId" separator="," open="(" close=")">
                #{categoryId}
            </foreach>
        </if>

            ) pmm
        GROUP BY
            DATE_FORMAT( pmm.create_date, IF(#{weeklyMonth} = 'week','%y%u', '%y%m') )
        ORDER BY
            year_week ASC;


    </select>

    <select id="sampleCapacityTotalCount" resultType="com.base.sbc.module.patternmaking.vo.PatternMakingWeekMonthViewVo" parameterType="com.base.sbc.module.patternmaking.dto.PatternMakingWeekMonthViewDto">
        SELECT
        ns.`status`,
		DATE_FORMAT( ns.start_date, IF(#{weeklyMonth} = 'week','%y年%u周', '%y年%m月') ) AS year_week,
		min( ns.start_date ) AS min_date,
		count( 1 ) AS num
        FROM
             t_node_status ns
        LEFT JOIN t_pattern_making pm on ns.data_id = pm.id
        WHERE
            pm.del_flag = '0'
            AND pm.company_code = #{companyCode}
            AND ns.node = '样衣任务'
            <if test="null != statusList and statusList.size() > 0">
                AND ns.`status` IN
                <foreach collection="statusList" item="status" separator="," open="(" close=")">
                    #{status}
                </foreach>
            </if>
            AND ns.start_date BETWEEN #{startTime} AND #{endTime}
        GROUP BY
            ns.`status`,DATE_FORMAT( ns.start_date, IF(#{weeklyMonth} = 'week','%y%u', '%y%m') )
        ORDER BY
            year_week ASC ;
    </select>
    <!-- 产能对比 》打版需求 -->
    <select id="capacityContrastDemandStatistics" resultType="com.base.sbc.module.patternmaking.vo.PatternMakingWeekMonthViewVo" parameterType="com.base.sbc.module.patternmaking.dto.PatternMakingWeekMonthViewDto">
        SELECT
            DATE_FORMAT( pm.create_date, IF ( #{weeklyMonth} = 'week', '%y年%u周', '%y年%m月' ) ) AS year_week,
            sum( pm.requirement_num ) as requirement_num_sum
        FROM
            (SELECT pm.* FROM t_pattern_making pm
                INNER JOIN t_node_status ns on ns.data_id = pm.id AND ns.node = #{node} WHERE pm.del_flag = '0' GROUP BY pm.id) AS pm
        WHERE
            pm.del_flag = '0'
            AND pm.company_code = #{companyCode}
            AND pm.create_date BETWEEN #{startTime} AND #{endTime}
        GROUP BY
            DATE_FORMAT( pm.create_date, IF ( #{weeklyMonth} = 'week', '%y%u', '%y%m' ) )
        ORDER BY
            year_week ASC
    </select>

    <!-- 产能对比 》打版产能 先拿到打版管理中版师id，去人员技能去找对应的人员产量多少，计算格式如下： 单位产量 除以 单位内小时数 * 一周168小时 -->
    <select id="capacityContrastCapacityStatistics" resultType="com.base.sbc.module.patternmaking.vo.PatternMakingWeekMonthViewVo" parameterType="com.base.sbc.module.patternmaking.dto.PatternMakingWeekMonthViewDto">
        SELECT
            DATE_FORMAT( pm.create_date, IF ( #{weeklyMonth} = 'week', '%y年%u周', '%y年%m月' ) ) AS year_week,
            ROUND(
                sum(
                (
                u.output /
                IF
                ( u.hours_within_unit = NULL OR u.hours_within_unit = 0, 1, u.hours_within_unit ) * 168
                )
                ),
                2
            ) as requirement_num_sum
        FROM
             (SELECT pm.* FROM t_pattern_making pm
                INNER JOIN t_node_status ns on ns.data_id = pm.id AND ns.node = #{node} WHERE pm.del_flag = '0' GROUP BY pm.id) AS pm
            INNER JOIN (
            SELECT DISTINCT
                ( substring_index( substring_index( a.user_ids,',', b.help_topic_id + 1 ), ',',- 1 ) ) AS user_id,
                a.*
            FROM
                ( SELECT * FROM `t_personnel_skills` ) AS a
                JOIN mysql.help_topic AS b ON b.help_topic_id &lt;  ( char_length( a.user_ids ) - char_length( REPLACE ( a.user_ids, ',', '' ) ) + 1 )
                GROUP BY
                user_id
        ) u ON pm.pattern_design_id = u.user_id
        WHERE
            pm.del_flag = '0'
            AND pm.company_code = #{companyCode}
            AND pm.create_date BETWEEN  #{startTime} AND #{endTime}
        GROUP BY
            DATE_FORMAT( pm.create_date, IF ( #{weeklyMonth} = 'week', '%y%u', '%y%m' ) )
        ORDER BY  year_week ASC

    </select>

    <select id="getPatternMakingSewingStatus" resultType="com.base.sbc.module.patternmaking.entity.PatternMaking">
        SELECT
        p.id,
        p.stitcher,
        p.stitcher_id,
        p.`status`,
        p.sewing_status
        FROM
        t_pattern_making p,
        t_style s
        where p.style_id = s.id
        and p.design_send_status='1'
        and p.prm_send_status='1'
        and p.del_flag &lt;&gt; '1'
        and s.del_flag &lt;&gt; '1'
        <if test="ew.customSqlSegment != null and ew.customSqlSegment != ''">
            ${ ew.customSqlSegment.startsWith("WHERE")?ew.customSqlSegment.replace("WHERE","AND "):ew.customSqlSegment}
        </if>
    </select>
</mapper>

